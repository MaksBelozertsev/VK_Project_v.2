import os
import shutil
import subprocess
import time
from pathlib import Path

APP_NAME = "VK Teams"
INSTALL_DIR = Path(os.environ["LOCALAPPDATA"]) / "Programs" / "VK Teams"
PROCESS_NAMES = ["vk-teams.exe", "VK Teams.exe", "VKTeamsUpdater.exe"]
LEFTOVER_LOCATIONS = [
    Path(os.environ["APPDATA"]) / "VK Teams",
    Path(os.environ["LOCALAPPDATA"]) / "VK Teams",
    Path(os.environ["TEMP"]) / "VK Teams",
    Path(os.environ["PUBLIC"]) / "Desktop" / "VK Teams.lnk",
    Path(os.environ["USERPROFILE"]) / "Desktop" / "VK Teams.lnk",
    Path(os.environ["APPDATA"]) / "Microsoft" / "Windows" / "Start Menu" / "Programs" / "VK Teams.lnk",
    Path(os.environ["LOCALAPPDATA"]) / "Temp" / "VK Teams",
    Path(os.environ["LOCALAPPDATA"]) / "SquirrelTemp",
]

def kill_processes():
    print(f"üî¥ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ {APP_NAME}...")
    for proc in PROCESS_NAMES:
        for _ in range(3):
            try:
                subprocess.run(
                    ["taskkill", "/f", "/im", proc],
                    stdout=subprocess.DEVNULL,
                    stderr=subprocess.DEVNULL,
                    check=True
                )
                print(f"‚úì –ü—Ä–æ—Ü–µ—Å—Å {proc} –∑–∞–≤–µ—Ä—à–µ–Ω")
                break
            except subprocess.CalledProcessError:
                time.sleep(1)
        else:
            print(f"‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å {proc}")

def remove_installation_dir():
    print(f"–£–¥–∞–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞–ø–∫–∏: {INSTALL_DIR}")
    for attempt in range(3):
        try:
            if INSTALL_DIR.exists():
                shutil.rmtree(INSTALL_DIR, ignore_errors=True)
                print("‚úì –ü–∞–ø–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∞")
                return True
            else:
                print("–ü–∞–ø–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return False
        except Exception as e:
            print(f"‚ö† –û—à–∏–±–∫–∞ (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}): {e}")
            time.sleep(2)
    return False

def clean_leftovers():
    print("–û—á–∏—Å—Ç–∫–∞ –æ—Å—Ç–∞—Ç–æ—á–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    for location in LEFTOVER_LOCATIONS:
        try:
            if location.exists():
                if location.is_file():
                    location.unlink()
                    print(f"‚úì –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {location}")
                else:
                    shutil.rmtree(location, ignore_errors=True)
                    print(f"‚úì –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: {location}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {location}: {e}")

def verify_uninstallation():
    remaining = []
    all_locations = [INSTALL_DIR] + LEFTOVER_LOCATIONS
    for location in all_locations:
        if location.exists():
            remaining.append(str(location))
    if remaining:
        print("\n –û—Å—Ç–∞–≤—à–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã:")
        for item in remaining:
            print(f"‚Ä¢ {item}")
        return False
    return True

def main():
    print(f"\n{'=' * 50}")
    print(f" –ù–∞—á–∞–ª–æ —É–¥–∞–ª–µ–Ω–∏—è {APP_NAME}".center(50))
    print(f"{'=' * 50}\n")
    kill_processes()
    remove_installation_dir()
    clean_leftovers()
    print(f"\n{'=' * 50}")
    if verify_uninstallation():
        print(f" {APP_NAME} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!".center(50))
    else:
        print(f" –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏".center(50))
    print(f"{'=' * 50}\n")

if __name__ == "__main__":
    try:
        main()
    except PermissionError:
        print("–¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞! –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")